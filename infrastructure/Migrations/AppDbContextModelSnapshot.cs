// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using infrastructure.persistence;

#nullable disable

namespace infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("domain.entity.Barang", b =>
                {
                    b.Property<Guid>("IdBarang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Gambar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Harga")
                        .HasColumnType("real");

                    b.Property<Guid>("IdKategori")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NamaBarang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.HasKey("IdBarang");

                    b.HasIndex("IdKategori");

                    b.ToTable("Barangs");
                });

            modelBuilder.Entity("domain.entity.Kategori", b =>
                {
                    b.Property<Guid>("IdKategori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NamaKategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKategori");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("domain.entity.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("domain.entity.Barang", b =>
                {
                    b.HasOne("domain.entity.Kategori", "Kategori")
                        .WithMany("Barangs")
                        .HasForeignKey("IdKategori")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("domain.entity.Kategori", b =>
                {
                    b.Navigation("Barangs");
                });
#pragma warning restore 612, 618
        }
    }
}
